//: [Previous](@previous)

/*:
 :: 인스턴스의 생성과 소멸 ::
 
 - init/deinit -
 
 
 
 인스턴스를 생성하는 이니셜라이저와 클래스의 인스턴스가 소멸될 때 호출되는 디이니셜라이저, 그리고 이와 관련된 것들에 대해 알아봅니다.
 
 프로퍼티 초기값
 이니셜라이저 init
 디이니셜라이저 deinit
 
 
 1. 프로퍼티 초기값
 
 스위프트의 모든 인스턴스는 초기화와 동시에 모든 프로퍼티에 유효한 값이 할당되어 있어야 합니다.
 프로퍼티에 미리 기본값을 할당해두면 인스턴스가 생성됨과 동시에 초기값을 지니게 됩니다.
 
 2-1. 이니셜라이저(initializer)
 
 프로퍼티 초기값을 지정하기 어려운 경우에는 이니셜라이저 init을 통해 인스턴스가 가져야 할 초기값을 전달할 수 있습니다.
 
 프로퍼티의 초기값이 꼭 필요 없을 때
 
 옵셔널을 사용!
 class 내부의 init을 사용할때는 convenience 키워드 사용
 
 암시적 추출 옵셔널은 인스턴스 사용에 꼭 필요하지만 초기값을 할당하지 않고자 할 때 사용

 2-2. 실패가능한 이니셜라이저
 이니셜라이저 매개변수로 전달되는 초기값이 잘못된 경우 인스턴스 생성에 실패할 수 있습니다.
 인스턴스 생성에 실패하면 nil을 반환합니다.
 실패가능한 이니셜라이저의 반환타입은 옵셔널 타입입니다.
 init?을 사용합니다.
 
 
 
 3. 디이니셜라이저(deinitializer)
 deinit은 클래스의 인스턴스가 메모리에서 해제되는 시점에 호출됩니다.
 인스턴스가 해제되는 시점에 해야할 일을 구현할 수 있습니다.
 deinit은 매개변수를 지닐 수 없습니다.
 자동으로 호출되므로 직접 호출할 수 없습니다.
 디이니셜라이저는 클래스 타입에만 구현할 수 있습니다.
 인스턴스가 메모리에서 해제되는 시점은 ARC(Automatic Reference Counting) 의 규칙에 따라 결정됩니다.
 ARC에 대해 더 자세한 사항은 아래 ARC 문서를 참고하세요.
 
 */


//: [Next](@next)
