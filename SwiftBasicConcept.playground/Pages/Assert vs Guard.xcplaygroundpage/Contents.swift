//: [Previous](@previous)

/*:
 :: Assert vs Guard ::
 
 
 
 애플리케이션이 동작 도중에 생성하는 다양한 연산 결과값을 동적으로 확인하고 안전하게 처리할 수 있도록 확인하고 빠르게 처리할 수 있습니다.
 
 
 
 1. Assertion
 
 assert(_:_:file:line:) 함수를 사용합니다.
 assert 함수는 디버깅 모드에서만 동작합니다.
 배포하는 애플리케이션에서는 제외됩니다.
 예상했던 조건의 검증을 위하여 사용합니다.
 
 * assert(_:_:file:line:)와 같은 역할을 하지만 실제 배포 환경에서도 동작하는 precondition(_:_:file:line:) 함수도 있습니다. 함께 살펴보세요.
 
 
 
 2. guard(빠른종료- Early Exit)
 
 guard를 사용하여 잘못된 값의 전달 시 특정 실행구문을 빠르게 종료합니다.
 디버깅 모드 뿐만 아니라 어떤 조건에서도 동작합니다.
 guard의 else 블럭 내부에는 특정 코드블럭을 종료하는 지시어(return, break 등)가 꼭 있어야 합니다.
 타입 캐스팅, 옵셔널과도 자주 사용됩니다.
 그 외에도 단순 조건 판단 후 빠르게 종료할 때도 용이합니다.
 
 ** if let / gurad 를 이용한 옵셔널 바인딩 비교 **
 

 
 */


//: [Next](@next)
